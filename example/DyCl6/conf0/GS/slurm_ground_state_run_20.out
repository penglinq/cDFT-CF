Currently Loaded Modulefiles:
 1) gmp/6.2.1-gcc-13.2.0-lcnhyse <aL>             
 2) mpfr/4.2.0-gcc-13.2.0-yy2fkq5 <aL>            
 3) mpc/1.3.1-gcc-13.2.0-5kgoftq <aL>             
 4) zlib-ng/2.1.3-gcc-13.2.0-jetnfwa <aL>         
 5) zstd/1.5.5-gcc-13.2.0-t2lua3l <aL>            
 6) gcc/13.2.0-gcc-13.2.0-w55nxkl                 
 7) cmake/3.20.2-gcc-13.2.0-rp74vpv               
 8) libfabric/1.18.1-gcc-13.2.0-bijxar4 <aL>      
 9) numactl/2.0.14-gcc-13.2.0-etkf74e <aL>        
10) openssh/8.7p1-gcc-13.2.0-g55xmkx <aL>         
11) slurm/22.05.6-gcc-13.2.0-tchsn6y <aL>         
12) openmpi/4.1.5-gcc-13.2.0-24q3ap2              
13) libpciaccess/0.17-gcc-13.2.0-r2cijnn <aL>     
14) libiconv/1.17-gcc-13.2.0-ntov4te <aL>         
15) xz/5.4.1-gcc-13.2.0-4xkm5xo <aL>              
16) libxml2/2.10.3-gcc-13.2.0-fr6jcjz <aL>        
17) ncurses/6.4-gcc-13.2.0-4o2yj6n <aL>           
18) hwloc/2.9.1-gcc-13.2.0-gzvfolk <aL>           
19) intel-tbb/2021.9.0-gcc-13.2.0-6nwk3ml <aL>    
20) intel-oneapi-mkl/2023.2.0-gcc-13.2.0-ohvyk7g  

Key:
<module-tag>  <aL>=auto-loaded  
/central/groups/changroup/members/lppeng/holmium/run/paper_final/run_Dy/conf7/GS/run_20
Tue Apr 15 10:54:59 PDT 2025
hpc-34-12.cm.cluster
--------------------------------------------------------------------------
WARNING: There is at least one non-excluded one OpenFabrics device found,
but there are no active ports detected (or Open MPI was unable to use
them).  This is most certainly not what you wanted.  Check your
cables, subnet manager configuration, etc.  The openib BTL will be
ignored for this job.

  Local host: hpc-34-12
--------------------------------------------------------------------------
Apr 15 10:55:02 ####### 
                ####### libDMET   version 0.5
                ####### A periodic DMET library for lattice model and realistic solid.
                ####### 
#INFO: **** input file is /central/groups/changroup/members/lppeng/holmium/run/paper_final/run_Dy/conf7/GS/run_20/ground_state.py ****
'''
Example input to calculate the ground state of a molecular system
Include x2c relativistic effect
'''
import pyscf
from pyscf.scf.hf import RHF
from pyscf.dft.uks import UKS
from pyscf.dft.gks import GKS
from pyscf import lib
import os, sys
import numpy as np
import scipy.linalg as la
from scipy.linalg import sqrtm, eigh
from scipy.optimize import root
np.set_printoptions(precision=12, threshold=sys.maxsize, linewidth=190, suppress=True)
log = lib.logger.Logger(sys.stdout, 4)

if __name__ == "__main__":
    from pyscf import gto, scf, dft, lib
    from pyscf.lib import chkfile
    from stevens import cdft, project, utils
    from stevens.project import get_mj

    # system input
    geometry = 'DyCl6' # The name of geometry file minus ".xyz"
                       # Make sure first atom is the central magnetic atom 
    spin = 5 # number of unpaired electrons in a unit cell
    charge = -3 # charge of the molecule or a unit cell
    basis = {'default': '631g', 'Dy': 'sarc-dkh'} # specify basis for all elements here
    max_memory = 32000 # in the unit of MB. Recommend: memory available on a node - 10000 MB
    qmmm = True # add environment with classical charges

    # (c)HF/DFT parameters
    xc = 'HF' # functional
    smearing = None # To help HF/DFT converge, try e.g. 5e-2
    chkfname_guess = 'project' # initial guess. 'minao' for default PySCF guess; None for constrained HF; 
                # path to a checkpoint file to restart from a SCF solution.
                # 'project' to project from the SCF solution in a small basis to generate the initial guess
    chkfname_small = '../gs_small_%s.chk'%geometry # checkpoint file in a small basis. Used when chkfname_guess == 'project'
    basis_small = {'default': 'minao', 'Dy': 'cc-x2c-minao'}# the small basis associated with chkfname_small
    change_dm_mode = 'rotate' # None: no change
                          # 'positive_z': set the 4f block of dm so that J~(0,0,J)
                          # 'rotate': rotate the 4f block of dm by some angles
    atom_index = 0 # the index of central lanthanide atom
    occ_idx = 20
    noise = 0 # max noise on density matrix initial guess

    # constrained HF parameters for the initial guess
    ao_shell = 'f'
    lo_chkfname = '../../UHF/uhf_gs_%s_lo.h5'%geometry  
    multiplier0 = 0.1
    # END USER INPUT

    # set up system
    if os.path.isfile('../../' + geometry + ".xyz"):
        mol = gto.M(
            atom = '../../' + geometry + ".xyz",
            basis = basis,
            verbose = 4,
            spin = spin,
            charge = charge,
            max_memory = max_memory,
            )
        mol.set_common_origin(mol._atom[atom_index][1])
    else:
        raise ValueError("No .xyz file available!")
    log.info("N_elec %s, N_ao %s"%(mol.nelec, mol.nao))

    # generate HF/DFT initial guess
    if chkfname_guess == 'minao':
        mf = scf.GKS(mol).x2c()
        dm0 = mf.get_init_guess()
        print("Use PySCF default init guess")
    elif chkfname_guess is None:
        # run constrained DFT
        angles = cdft.sample_rotation('xyz', occ_idx, unit=20)
        from scipy.spatial.transform import Rotation
        direction = Rotation.from_euler('zyz', angles, degrees=False) @ [0,0,1]
        cmf = cdft.CGKS(mol, direction, multiplier_guess=multiplier0, max_cycle=300,
                atom_index=atom_index, ao_shell='f', lo_chkfname=lo_chkfname, xc=xc, smearing=smearing)
        cmf.kernel()
        dm0 = cmf._scf.make_rdm1()
        print("Contrained SCF solution as init guess")
    elif chkfname_guess == 'project':
        # project dm0 in a small basis to the larger basis 
        dm0 = utils.project_dm_from_small_basis(mol, basis_small, chkfname_small, change_dm_mode, atom_index=atom_index, occ_idx=occ_idx)
        print("Project wavefunction in a smaller basis to the target basis as init guess")
    else:
        mf = scf.GKS(mol).x2c()
        data = chkfile.load(chkfname_guess, 'scf')
        mf.__dict__.update(data)
        dm0 = mf.make_rdm1()
        mf.analyze(with_meta_lowdin=False)
        print("Load .chk file for init guess")
    if change_dm_mode is not None and not chkfname_guess == 'project': # when chkfname_guess == 'project', change in small basis
        dm0 = utils.change_dm_guess(mol, dm0, change_dm_mode, atom_index=atom_index, occ_idx=occ_idx)
    dm0 += (np.random.rand(*(dm0.shape)) - 0.5) * noise  
    print("J vector of initial guess", get_mj(mol, dm0, analyze=True))

    # run HF/DFT
    mf = scf.GKS(mol).x2c()
    mf.xc = xc
    if xc.upper() != 'HF':
        mf.collinear = 'mcol'
        mf.grids.level = 6 
    mf.chkfile = 'gs_' + geometry + '.chk' 
    mf.max_cycle = 1000 
    if smearing is not None:
        mf = scf.addons.smearing_(mf, sigma=smearing, method="fermi")
    if qmmm: # add the precomputed potential from environmental classical charges 
        get_hcore_original = mf.get_hcore
        hcore_mm = np.load('../../mm_hcore.npy')
        def get_hcore_mm(self, mol=None):
            return get_hcore_original(mol=mol) + la.block_diag(hcore_mm, hcore_mm)
        import types
        mf.get_hcore = types.MethodType(get_hcore_mm, mf)
    mf.kernel(dm0=dm0)
    dm = mf.make_rdm1()
    print("S vector", get_mj(mol, dm, include_L=False))
    print("L vector", get_mj(mol, dm, include_S=False))
    print("J vector", get_mj(mol, dm))
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='hpc-34-12.cm.cluster', release='5.14.0-427.13.1.el9_4.x86_64', version='#1 SMP PREEMPT_DYNAMIC Wed Apr 10 10:29:16 EDT 2024', machine='x86_64')  Threads 8
Python 3.11.6 | packaged by conda-forge | (main, Oct  3 2023, 10:40:35) [GCC 12.3.0]
numpy 1.26.0  scipy 1.11.3
Date: Tue Apr 15 10:55:04 2025
PySCF version 2.5.0
PySCF path  /home/lppeng/anaconda3/envs/nerscV25/lib/python3.11/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 7
[INPUT] num. electrons = 171
[INPUT] charge = -3
[INPUT] spin (= nelec alpha-beta = 2S) = 5
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Dy     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT]  2 Cl     2.724000000000   0.000000000000   0.000000000000 AA    5.147613963315   0.000000000000   0.000000000000 Bohr   0.0
[INPUT]  3 Cl    -2.724000000000   0.000000000000   0.000000000000 AA   -5.147613963315   0.000000000000   0.000000000000 Bohr   0.0
[INPUT]  4 Cl     0.000000000000   2.724000000000   0.000000000000 AA    0.000000000000   5.147613963315   0.000000000000 Bohr   0.0
[INPUT]  5 Cl     0.000000000000  -2.724000000000   0.000000000000 AA    0.000000000000  -5.147613963315   0.000000000000 Bohr   0.0
[INPUT]  6 Cl     0.000000000000   0.000000000000   2.724000000000 AA    0.000000000000   0.000000000000   5.147613963315 Bohr   0.0
[INPUT]  7 Cl     0.000000000000   0.000000000000  -2.724000000000 AA    0.000000000000   0.000000000000  -5.147613963315 Bohr   0.0

nuclear repulsion = 1868.38919656687
number of shells = 84
number of NR pGTOs = 449
number of NR cGTOs = 198
basis = {'default': '631g', 'Dy': 'sarc-dkh'}
ecp = {}
CPU time:         3.65
N_elec (88, 83), N_ao 198
#INFO: **** input file is /central/groups/changroup/members/lppeng/holmium/run/paper_final/run_Dy/conf7/GS/run_20/ground_state.py ****
'''
Example input to calculate the ground state of a molecular system
Include x2c relativistic effect
'''
import pyscf
from pyscf.scf.hf import RHF
from pyscf.dft.uks import UKS
from pyscf.dft.gks import GKS
from pyscf import lib
import os, sys
import numpy as np
import scipy.linalg as la
from scipy.linalg import sqrtm, eigh
from scipy.optimize import root
np.set_printoptions(precision=12, threshold=sys.maxsize, linewidth=190, suppress=True)
log = lib.logger.Logger(sys.stdout, 4)

if __name__ == "__main__":
    from pyscf import gto, scf, dft, lib
    from pyscf.lib import chkfile
    from stevens import cdft, project, utils
    from stevens.project import get_mj

    # system input
    geometry = 'DyCl6' # The name of geometry file minus ".xyz"
                       # Make sure first atom is the central magnetic atom 
    spin = 5 # number of unpaired electrons in a unit cell
    charge = -3 # charge of the molecule or a unit cell
    basis = {'default': '631g', 'Dy': 'sarc-dkh'} # specify basis for all elements here
    max_memory = 32000 # in the unit of MB. Recommend: memory available on a node - 10000 MB
    qmmm = True # add environment with classical charges

    # (c)HF/DFT parameters
    xc = 'HF' # functional
    smearing = None # To help HF/DFT converge, try e.g. 5e-2
    chkfname_guess = 'project' # initial guess. 'minao' for default PySCF guess; None for constrained HF; 
                # path to a checkpoint file to restart from a SCF solution.
                # 'project' to project from the SCF solution in a small basis to generate the initial guess
    chkfname_small = '../gs_small_%s.chk'%geometry # checkpoint file in a small basis. Used when chkfname_guess == 'project'
    basis_small = {'default': 'minao', 'Dy': 'cc-x2c-minao'}# the small basis associated with chkfname_small
    change_dm_mode = 'rotate' # None: no change
                          # 'positive_z': set the 4f block of dm so that J~(0,0,J)
                          # 'rotate': rotate the 4f block of dm by some angles
    atom_index = 0 # the index of central lanthanide atom
    occ_idx = 20
    noise = 0 # max noise on density matrix initial guess

    # constrained HF parameters for the initial guess
    ao_shell = 'f'
    lo_chkfname = '../../UHF/uhf_gs_%s_lo.h5'%geometry  
    multiplier0 = 0.1
    # END USER INPUT

    # set up system
    if os.path.isfile('../../' + geometry + ".xyz"):
        mol = gto.M(
            atom = '../../' + geometry + ".xyz",
            basis = basis,
            verbose = 4,
            spin = spin,
            charge = charge,
            max_memory = max_memory,
            )
        mol.set_common_origin(mol._atom[atom_index][1])
    else:
        raise ValueError("No .xyz file available!")
    log.info("N_elec %s, N_ao %s"%(mol.nelec, mol.nao))

    # generate HF/DFT initial guess
    if chkfname_guess == 'minao':
        mf = scf.GKS(mol).x2c()
        dm0 = mf.get_init_guess()
        print("Use PySCF default init guess")
    elif chkfname_guess is None:
        # run constrained DFT
        angles = cdft.sample_rotation('xyz', occ_idx, unit=20)
        from scipy.spatial.transform import Rotation
        direction = Rotation.from_euler('zyz', angles, degrees=False) @ [0,0,1]
        cmf = cdft.CGKS(mol, direction, multiplier_guess=multiplier0, max_cycle=300,
                atom_index=atom_index, ao_shell='f', lo_chkfname=lo_chkfname, xc=xc, smearing=smearing)
        cmf.kernel()
        dm0 = cmf._scf.make_rdm1()
        print("Contrained SCF solution as init guess")
    elif chkfname_guess == 'project':
        # project dm0 in a small basis to the larger basis 
        dm0 = utils.project_dm_from_small_basis(mol, basis_small, chkfname_small, change_dm_mode, atom_index=atom_index, occ_idx=occ_idx)
        print("Project wavefunction in a smaller basis to the target basis as init guess")
    else:
        mf = scf.GKS(mol).x2c()
        data = chkfile.load(chkfname_guess, 'scf')
        mf.__dict__.update(data)
        dm0 = mf.make_rdm1()
        mf.analyze(with_meta_lowdin=False)
        print("Load .chk file for init guess")
    if change_dm_mode is not None and not chkfname_guess == 'project': # when chkfname_guess == 'project', change in small basis
        dm0 = utils.change_dm_guess(mol, dm0, change_dm_mode, atom_index=atom_index, occ_idx=occ_idx)
    dm0 += (np.random.rand(*(dm0.shape)) - 0.5) * noise  
    print("J vector of initial guess", get_mj(mol, dm0, analyze=True))

    # run HF/DFT
    mf = scf.GKS(mol).x2c()
    mf.xc = xc
    if xc.upper() != 'HF':
        mf.collinear = 'mcol'
        mf.grids.level = 6 
    mf.chkfile = 'gs_' + geometry + '.chk' 
    mf.max_cycle = 1000 
    if smearing is not None:
        mf = scf.addons.smearing_(mf, sigma=smearing, method="fermi")
    if qmmm: # add the precomputed potential from environmental classical charges 
        get_hcore_original = mf.get_hcore
        hcore_mm = np.load('../../mm_hcore.npy')
        def get_hcore_mm(self, mol=None):
            return get_hcore_original(mol=mol) + la.block_diag(hcore_mm, hcore_mm)
        import types
        mf.get_hcore = types.MethodType(get_hcore_mm, mf)
    mf.kernel(dm0=dm0)
    dm = mf.make_rdm1()
    print("S vector", get_mj(mol, dm, include_L=False))
    print("L vector", get_mj(mol, dm, include_S=False))
    print("J vector", get_mj(mol, dm))
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='hpc-34-12.cm.cluster', release='5.14.0-427.13.1.el9_4.x86_64', version='#1 SMP PREEMPT_DYNAMIC Wed Apr 10 10:29:16 EDT 2024', machine='x86_64')  Threads 8
Python 3.11.6 | packaged by conda-forge | (main, Oct  3 2023, 10:40:35) [GCC 12.3.0]
numpy 1.26.0  scipy 1.11.3
Date: Tue Apr 15 10:55:05 2025
PySCF version 2.5.0
PySCF path  /home/lppeng/anaconda3/envs/nerscV25/lib/python3.11/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 7
[INPUT] num. electrons = 171
[INPUT] charge = -3
[INPUT] spin (= nelec alpha-beta = 2S) = 5
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Dy     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT]  2 Cl     2.724000000000   0.000000000000   0.000000000000 AA    5.147613963315   0.000000000000   0.000000000000 Bohr   0.0
[INPUT]  3 Cl    -2.724000000000   0.000000000000   0.000000000000 AA   -5.147613963315   0.000000000000   0.000000000000 Bohr   0.0
[INPUT]  4 Cl     0.000000000000   2.724000000000   0.000000000000 AA    0.000000000000   5.147613963315   0.000000000000 Bohr   0.0
[INPUT]  5 Cl     0.000000000000  -2.724000000000   0.000000000000 AA    0.000000000000  -5.147613963315   0.000000000000 Bohr   0.0
[INPUT]  6 Cl     0.000000000000   0.000000000000   2.724000000000 AA    0.000000000000   0.000000000000   5.147613963315 Bohr   0.0
[INPUT]  7 Cl     0.000000000000   0.000000000000  -2.724000000000 AA    0.000000000000   0.000000000000  -5.147613963315 Bohr   0.0

nuclear repulsion = 1868.38919656687
number of shells = 16
number of NR pGTOs = 511
number of NR cGTOs = 89
basis = {'default': 'minao', 'Dy': 'cc-x2c-minao'}
ecp = {}
CPU time:         3.82
basis {'default': '631g', 'Dy': 'sarc-dkh'} 198
basis {'default': 'minao', 'Dy': 'cc-x2c-minao'} 89
(3, 89, 89) 89
Haar random target direction [0.0, 0.0, 1.0]
Haar random total rotation [0. 0. 0.]
Rotated f-block dm by angles from +z [0. 0. 0.]
Project wavefunction in a smaller basis to the target basis as init guess
(3, 198, 198) 198
elemental J of ['Cl' 'Dy']
  Cl 0.0000+0.0000j 0.0000+0.0000j 0.0302+0.0000j 
  Dy -0.0001+0.0000j 0.0000+0.0000j 7.4416-0.0000j 
J vector of initial guess [ 0.    -0.j -0.    -0.j  7.4717+0.j]


******** <class 'pyscf.x2c.x2c.X2C1eGKS'> ********
method = X2C1eGKS
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
diis_damp = 0
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 1000
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = gs_DyCl6.chk
max_memory 32000 MB (current use 165 MB)
XC library pyscf.dft.libxc version 6.1.0
    S. Lehtola, C. Steigemann, M. J.T. Oliveira, and M. A.L. Marques.,  SoftwareX 7, 1–5 (2018)
XC functionals = HF

radial grids: 
    Treutler-Ahlrichs [JCP 102, 346 (1995); DOI:10.1063/1.469408] (M4) radial grids
    
becke partition: Becke, JCP 88, 2547 (1988); DOI:10.1063/1.454033
pruning grids: <function nwchem_prune at 0x7fca3a335e40>
grids dens level: 3
symmetrized grids: False
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x7fca3a336480>
small_rho_cutoff = 1e-07
collinear = col


******** <class 'pyscf.x2c.x2c.SpinOrbitalX2CHelper'> ********
approx = 1e
xuncontract = 1
Overwritten attributes  get_hcore  of <class 'pyscf.x2c.x2c.X2C1eGKS'>
Set gradient conv threshold to 3.16228e-05
tot grids = 134432
init E= -14971.0748272087
  HOMO = -0.282421511789114  LUMO = -0.0531678567036387
cycle= 1 E= -14978.5557408435  delta_E= -7.48  |g|= 1.67  |ddm|= 2.39
  HOMO = -0.243961658036232  LUMO = 0.124239308939432
cycle= 2 E= -14978.6827726814  delta_E= -0.127  |g|= 0.805  |ddm|= 1.21
  HOMO = -0.323000476555817  LUMO = 0.12239074898883
cycle= 3 E= -14978.7609749945  delta_E= -0.0782  |g|= 0.28  |ddm|= 0.577
  HOMO = -0.322580791563923  LUMO = 0.122579552422453
cycle= 4 E= -14978.7669457787  delta_E= -0.00597  |g|= 0.0284  |ddm|= 0.093
  HOMO = -0.323631897388132  LUMO = 0.122829743573361
cycle= 5 E= -14978.7672742413  delta_E= -0.000328  |g|= 0.00667  |ddm|= 0.031
  HOMO = -0.323406217612292  LUMO = 0.122831647874844
cycle= 6 E= -14978.7673442292  delta_E= -7e-05  |g|= 0.00488  |ddm|= 0.0129
  HOMO = -0.323491186393212  LUMO = 0.122836006502048
cycle= 7 E= -14978.767402823  delta_E= -5.86e-05  |g|= 0.00394  |ddm|= 0.00994
  HOMO = -0.32334172870547  LUMO = 0.122832675068172
cycle= 8 E= -14978.7674744608  delta_E= -7.16e-05  |g|= 0.00256  |ddm|= 0.0161
  HOMO = -0.323414559369718  LUMO = 0.122829847100743
cycle= 9 E= -14978.7675172855  delta_E= -4.28e-05  |g|= 0.000856  |ddm|= 0.0196
  HOMO = -0.323402293377709  LUMO = 0.122830134581075
cycle= 10 E= -14978.7675204929  delta_E= -3.21e-06  |g|= 0.000339  |ddm|= 0.00556
  HOMO = -0.323416305732244  LUMO = 0.122830666541357
cycle= 11 E= -14978.76752079  delta_E= -2.97e-07  |g|= 0.000196  |ddm|= 0.00125
  HOMO = -0.323414655129733  LUMO = 0.122831551146743
cycle= 12 E= -14978.7675208959  delta_E= -1.06e-07  |g|= 0.000118  |ddm|= 0.000582
  HOMO = -0.323421993928275  LUMO = 0.12283085513444
cycle= 13 E= -14978.7675209439  delta_E= -4.8e-08  |g|= 6.13e-05  |ddm|= 0.00041
  HOMO = -0.323416218011141  LUMO = 0.1228310566286
cycle= 14 E= -14978.7675209578  delta_E= -1.39e-08  |g|= 3.43e-05  |ddm|= 0.000253
  HOMO = -0.323417262694323  LUMO = 0.122830941578074
cycle= 15 E= -14978.7675209609  delta_E= -3.17e-09  |g|= 2.87e-05  |ddm|= 8.67e-05
  HOMO = -0.323416020577005  LUMO = 0.122831059751624
cycle= 16 E= -14978.7675209632  delta_E= -2.23e-09  |g|= 2.55e-05  |ddm|= 5.93e-05
  HOMO = -0.323416302863912  LUMO = 0.122830994221966
cycle= 17 E= -14978.7675209669  delta_E= -3.74e-09  |g|= 2.05e-05  |ddm|= 0.000116
  HOMO = -0.323416251731344  LUMO = 0.122831034449557
cycle= 18 E= -14978.7675209706  delta_E= -3.65e-09  |g|= 1.56e-05  |ddm|= 0.000157
  HOMO = -0.323416528175107  LUMO = 0.122830987383116
cycle= 19 E= -14978.7675209722  delta_E= -1.68e-09  |g|= 1.32e-05  |ddm|= 9.31e-05
  HOMO = -0.323416675073748  LUMO = 0.122831025662035
cycle= 20 E= -14978.7675209737  delta_E= -1.45e-09  |g|= 1.04e-05  |ddm|= 9.3e-05
  HOMO = -0.323416456674448  LUMO = 0.122831019199318
cycle= 21 E= -14978.7675209749  delta_E= -1.2e-09  |g|= 7.04e-06  |ddm|= 0.000115
  HOMO = -0.323416572495526  LUMO = 0.122831022421388
cycle= 22 E= -14978.7675209753  delta_E= -4.51e-10  |g|= 5.07e-06  |ddm|= 7.8e-05
  HOMO = -0.32341649429697  LUMO = 0.122831022520148
Extra cycle  E= -14978.7675209754  delta_E= -8e-11  |g|= 4.55e-06  |ddm|= 5.53e-06
converged SCF energy = -14978.7675209754  <S^2> = 8.2691213  2S+1 = 5.8375068
(3, 198, 198) 198
S vector [-0.    -0.j -0.    +0.j  2.3832+0.j]
(3, 198, 198) 198
L vector [-0.0001-0.j  0.    +0.j  5.1165-0.j]
(3, 198, 198) 198
J vector [-0.0001-0.j -0.    -0.j  7.4997-0.j]
Tue Apr 15 10:55:38 PDT 2025
